#-----------------------------------------------------------------------------------------------------------------------------
#---- fb2converter engine configuration.
#---- This should be UTF-8 only!
#----
#---- NOTE: you could specify multiple sources of configuration by providing multiple --config arguments. They are processed
#---- in order of occurrence. Only one source could be read from "stdin"
#----
#-----------------------------------------------------------------------------------------------------------------------------

[logger]

	#---- controls terminal (stdout, stderr) output
	[logger.console]
		#---- logging level
		#---- "none"   - suppress all console logging
		#---- "normal" - messages INFO level and higher are outputted
		#---- "debug"  - all log messages are outputted
		# level = "normal"

	#---- controls logging to a file (could duplicate CONSOLE messages)
	[logger.file]
		#---- logging level
		#---- "none"   - suppress logging
		#---- "normal" - messages INFO level and higher are printed
		#---- "debug"  - all log output is printed
		# level = "debug"
		#---- path to the log file, if relative - relative to current working directory
		# destination = "conversion.log"
		#---- how to handle output file during consecutive program runs
		#---- "append"    - keep all old log messages, append new ones at the end
		#---- "overwrite" - keep only messages from the last run, log is overwritten
		# mode = "append"

[document]
	#---- NOTE: unless specified separately all relative paths in configuration are relative to the directory of configuration
	#---- file!
	#
	#---- Version of document configuration.
	#---- Version 1 (v1) - fb2mobi legacy format with some additional patterns
	#-------- In all format specifications curly brackets are indicating conditional blocks: only if result of keywords
	#-------- expansion inside block is not empty - block will be used, otherwise entire block will be ignored. Could be recursive,
	#-------- to output curly brackets escape them with backslash.
	#---- Version 2 (v2) changes how all format fields are defined and processed.
	#-------- fields must be specified using go template language: https://pkg.go.dev/text/template#pkg-overview
	#-------- additional functions from slim-sprig package are available for processing: https://go-task.github.io/slim-sprig
	#-------- Full list of variables always available (additional variables could be specified for a particular field):
	#------------ .Context (string) - provides indication where the result of expansion be used
	#------------ .Title (string) - book title as specified in fb2 metainformation
	#------------ .Series { .Name (string), .Number (integer) } - series as specified in fb2 metainformation
	#------------ .Language (string) - cannonical string representation of a language as specified in fb2 metainformation
	#------------ .Date (string) - date as specified in fb2 metainformation. Converter makes no attempt to parse or validate it
	#------------ .Authors (array of { .FirstName (string), .MiddleName (string), .LastName (string)}) as specified in fb2 metainformation
	#------------ .Format (string) - string representing requested conversion (ex: epub, azw3, kepub...)
	#------------ .SourceFile (string) - base part of the source file name (no path)
	#------------ .BookID (string) - book UUID as specified by fb2 metainformation or assigned by converter if none
	#------------ .ASIN (string) - ASIN as specified by metainformation overwrite
	#------------ .Genres (array of strings) - genres names as specified by fb2 metainformation
	#
	#---- NOTE: v2 gives you a lot of power over v1 - you could easily produce broken documents, be careful!
	#---- fb2 quality varies greately - some fields could be empty.
	#
	#---- NOTE: v1 is always default for backward compatibility
	# version = 1

	#---- CSS stylesheet to use. If absent - default one will be supplied
	# style = "profiles/default.css"

	#---- Some programs (CoolReader and some versions of FBReader) expect "old" zip format. We have this on by default, if
	#---- you encounter unreadable epub/kepub files - turn it off
	# fix_zip_format = true

	# When true program removes transparency on PNG files - Kindle eInc devices do not handle it well
	# remove_png_transparency = false

	#---- Forcefully resize all images (but cover) with specified ratio
	# images_scale_factor = 0

	#---- Forcefully recompress all supported images (presently JPEG, PNG)
	#---- For JPEG quality respects "jpeg_quality_level" - if detected level for an image is higher than requested one image will be re-encoded
	#---- For PNG best compression_level is always specified
	#---- use on your own risk - results may vary
	# optimize_images = false
	#---- JPEG quality level to use, percentage points (40% - 100%), when not specified or wrong 75% is used
	# jpeq_quality_level = 75

    #---- For v1: pattern to format book title in OPF metadata
	#---- "#title"             - book title
	#---- "#file_name"         - name of original FB2 file (no path, no extension)
	#---- "#file_name_ext"     - name of original FB2 file (no path)
	#---- "#series"            - name of sequence book belongs to
	#---- "#series_first_word" - first word in the name of series book belongs to, up to "series_first_word_length" letters
	#---- "#abbrseries"        - abbreviated #series, lower case
	#---- "#ABBRseries"        - abbreviated #series, upper case
	#---- "#number"            - number in a series
	#---- "#padnumber"         - number in a series padded with zeros to "series_number_positions"
	#---- "#date"              - date specified in a book description
	# title_format = "{(#ABBRseries{ - #padnumber}) }#title"
	#---- For v2: template to produce book title in various contexts.
	#-------- Contexts: opf-title, section-title, stamp-title, toc-title
	#---- to get exactly the same result as v1 defaults use this:
	# title_format = """\
	# 	{{- /* Shorten book authors + book title */ -}}\
	# 	{{- if hasPrefix "section-" .Context -}}\
	# 	{{-   $all := "" -}}\
	# 	{{-   if gt (len .Authors) 0 -}}\
	# 	{{-     with first .Authors -}}\
	# 	{{-       $all = .LastName -}}\
	# 	{{-       if .FirstName }}{{ $all = (cat $all .FirstName) }}{{- end -}}\
	# 	{{-       if .MiddleName }}{{ $all = (cat $all .MiddleName) }}{{- end -}}\
	# 	{{-     end -}}\
	# 	{{-     if gt (len .Authors) 1 -}}\
	# 	{{-       if eq .Language "ru" }}{{ $all = (cat $all "и др") }}{{- else -}}{{ $all = (printf "%s%s" $all ", et al") }}{{- end -}}\
	# 	{{-     end -}}\
	# 	{{-   end -}}\
	# 	{{-   cat $all .Title -}}\
	# 	{{- /* Shorten book authors */ -}}\
	# 	{{- else if hasPrefix "stamp-" .Context -}}\
	# 	{{-   if gt (len .Authors) 0 -}}\
	# 	{{-     $all := "" -}}\
	# 	{{-     with first .Authors -}}\
	# 	{{-       $all = .LastName }}\
	# 	{{-       if .FirstName }}{{ $all = (cat $all .FirstName) }}{{- end -}}\
	# 	{{-       if .MiddleName }}{{ $all = (cat $all .MiddleName) }}{{- end -}}\
	# 	{{-     end -}}\
	# 	{{-     if gt (len .Authors) 1 -}}\
	# 	{{-       if eq .Language "ru" }}{{ $all = (cat $all "и др") }}{{- else -}}{{ $all = (printf "%s%s" $all ", et al") }}{{- end -}}\
	# 	{{-     end -}}\
	# 	{{-     $all -}}
	# 	{{-   end -}}\
	# 	{{- /* All book authors */ -}}\
	# 	{{- else if hasPrefix "toc-" .Context -}}\
	# 	{{-   $all := list -}}\
	# 	{{-   range .Authors -}}\
	# 	{{-     $name := .LastName -}}\
	# 	{{-     if .FirstName -}}{{ $name = (cat $name .FirstName) -}}{{- end -}}\
	# 	{{-     if .MiddleName -}}{{ $name = (cat $name .MiddleName) -}}{{- end -}}\
	# 	{{-     $all = append $all $name -}}\
	# 	{{-   end -}}\
	# 	{{-   join ", " $all -}}\
	# 	{{- /* Abbreviated series/number + book title */ -}}\
	# 	{{- else -}}\
	# 	{{-   $seriesLetters := list -}}\
	# 	{{-   range $word := splitList " " .Series.Name -}}\
	# 	{{-     $seriesLetters = append $seriesLetters (upper (first (splitList "" $word))) -}}\
	# 	{{-   end -}}\
	# 	{{-   if gt (len $seriesLetters) 0 -}}\
	# 	{{-     "(" }}{{- join "" $seriesLetters -}}\
	# 	{{-     if gt .Series.Number 0 -}}\
	# 	{{-       printf " - %02d" .Series.Number -}}\
	# 	{{-     end -}}\
	# 	{{-     ") " -}}\
	# 	{{-   end -}}\
	# 	{{    .Title -}}\
	# 	{{- end -}}\
	# 	"""

	#---- How many positions padded series number will take
	#---- NOTE: for v1 only, otherwise ignored
	# series_number_positions = 2
	#---- How many letters take from first word of series name
	#---- if less or equal 0 - take whole word, if word is shorter than specified - take whole word only
	#---- NOTE: for v1 only, otherwise ignored
	# series_first_word_length = 4

	#---- Processing author name in different contexts
	#---- For v1: patterns to format author name (#author, #autors)
	#---- "#f"  - first name
	#---- "#fi" - first name initial (first letter)
	#---- "#m"  - middle name
	#---- "#mi" - middle name initial (first letter of middle name)
	#---- "#l"  - last name
	# author_format = "#l{ #f}{ #m}"
	#---- NOTE: author_format_meta, author_format_file_name are for v1 only, otherwise ignored
	# author_format_meta = "#l{ #f}{ #m}"
	# author_format_file_name = "#l{ #f}{ #m}"
	#---- For v2: template to format author name
	#-------- Contexts: opf-author, section-author
	#-------- .Author { .FirstName (string), .MiddleName (string), .LastName (string)} is set in addion to other variables.
	#---- to get exactly the same result as v1 defaults use this:
	# author_format = """\
	# 	{{- with .Author }}\
	# 	{{   .LastName }}\
	# 	{{   if .FirstName }} {{ .FirstName}}{{ end }}\
	# 	{{   if .MiddleName }} {{ .MiddleName }}{{ end }}\
	# 	{{ end -}}\
	# 	"""

	#---- When file_name_format is set output file will have name created using FB2 metainformation
	#---- NOTE: watch out for path separators, directories will be created!
	#---- For v1: pattern to format output file name
	#---- "#title"             - book title
	#---- "#series"            - name of sequence book belongs to
	#---- "#series_first_word" - first word in the name of series book belongs to, up to "series_first_word_length" letters
	#---- "#abbrseries"        - abbreviated #series, lower case
	#---- "#ABBRseries"        - abbreviated #series, upper case
	#---- "#number"            - number in a series
	#---- "#padnumber"         - number in a series padded with zeros to "series_number_positions"
	#---- "#authors"           - list of all authors (each formatted as specified in "author_format")
	#---- "#author"            - name of the first author (formatted as specified in "author_format"). If more then one - it will
	#----                        be indicated with either ", et al" or " и др" depending on book language
	#---- "#bookid"            - Book UUID (either parsed from or genrated based of fb2 information)
	# file_name_format = "{#author - }#title"
	#---- For v2: template to format output file name
	#-------- Contexts: output-filename
	#---- to get exactly the same result as v1 above use this:
	# file_name_format = """\
	# {{- $all := "" -}}\
	# {{- if gt (len .Authors) 0 -}}\
	# {{-   with first .Authors -}}\
	# {{-     $all = .LastName -}}\
	# {{-     if .FirstName }}{{ $all = (cat $all .FirstName) }}{{- end -}}\
	# {{-     if .MiddleName }}{{ $all = (cat $all .MiddleName) }}{{- end -}}\
	# {{-   end -}}\
	# {{-   if gt (len .Authors) 1 -}}\
	# {{-     if eq .Language "ru" }}{{ $all = (cat $all "и др") }}{{- else -}}{{ $all = (printf "%s%s" $all ", et al") }}{{- end -}}\
	# {{-   end -}}\
	# {{-   $all = cat $all "-" -}}\
	# {{- end -}}\
	# {{- if $all -}}
	# {{-   cat $all .Title -}}\
	# {{- else -}}\
	# {{-   .Title -}}\
	# {{- end -}}\
	# """

	#---- Slugify/transliterate output file name - after all other processing on file name is completed
	# file_name_transliterate = false

	#---- Place book chapters in separate files. On most reading devices it also means starting
	#---- chapter on a new page. This mode usually provides faster reading experience as most readers
	#---- keep only current content file in memory.
	#---- NOTE: when this is "false" other settings controlling size of the resulting content are ignored.
	# chapter_per_file = true

	#---- Determines on what level fb2 <section> becomes book chapter
	# chapter_level = 2147483647

	#---- Slugify/transliterate book title and author(s) names
	# transliterate_meta = false

	#---- On supported devices allows to open book from cover page, rather than from beginning of the text
	#---- Kindles do not support this mode, instead if annotation page creation was specified book will open on annotation page
	# open_from_cover = false

	#---- Insert soft hyphen symbols '\u00AD' inside words - for devices which do not support proper hyphenation
	#---- Hyphenation dictionaries are from http://ctan.math.utah.edu/ctan/tex-archive/language/hyph-utf8/tex/generic/hyph-utf8/patterns/txt
	#---- NOTE: modern day Kindles always have hyphenation on for Russian language (and off for English)
	# insert_soft_hyphen = false

	#---- When breaking sentences into words nbsp symbols are considered to be part of the word. This will replace all
	#---- nbsp symbols with ordinary spaces, potentially breaking original formatting and changing hyphenation
	#---- NOTE: this setting may conflict with document transforms
	# ignore_nonbreakable_space = false

	#---- When set no page maps will be generated in epub and no page markers inserted anywhere.
	#---- this in turn will disable apnx generation for kindle based formats
	# no_page_map = false

	#---- To generate epub page map we use very rough text processing, controlling approximate page size in Unicode code points
	# characters_per_page = 2300

	#---- Some devices (definitely Kobo) become very slow when epub XHTML content file becomes too big.
	#---- When set program will split content into smaller files using number of pages (see characters_per_page).
	#---- NOTE: does not respect original formatting, ignored when chapter_per_file set to "false"
	# pages_per_file = 2147483647
	#---- or you could specify subtitles on which chapter would be broken into smaller files. This setting is off by default - it has no default value.
	#---- NOTE: it rarely makes sense to have both pages_per_file and chapter_subtitle_dividers active at the same time, ignored when chapter_per_file set to "false".
	# chapter_subtitle_dividers = [ "* * *", "///" ]

	#---- Do not skip images which cannot be decoded by program. Use them without any processing, allowing reader to decide what to do.
	#---- Not a good idea in general - for example kindlegen will likely drop them anyways
	# use_broken_images = false

	[document.dropcaps]
		#---- Allow dropcap styles
		# create = false
		#---- Characters to ignore when styling dropcaps
		# ignore_symbols = "'\"-.…0123456789‒–—«»“”<>"

	[document.annotation]
		#---- Create separate "chapter" with book annotation if available
		# create = false
		#---- And use provded annotation title
		# title = "Annotation"
		#---- Show annotation in TOC
		# add_to_toc = false

	[document.notes]
		#---- How to render notes in the book
		#---- "default"        - notes are links
		#---- "inline"         - note is shown "in-place" and could be styled via css
		#---- "block"          - notes are shown "in-place" at the paragraph end and could be styled via css
		#---- "float"          - pop up notes using "bi-directional links" method
		#---- "float-old"      - same as "float", pop up notes using "bi-directional links" method
		#---- "float-new"      - pop up notes using "preferred" method - HTML5 with <aside> recommended by Amazon publishing guidelines
		#---- "float-new-more" - pop up notes using "preferred" method - HTML5 with <aside> recommended by Amazon publishing guidelines.
		#----                    Shows (…etc.) at the end of first paragraph of the note when note has more than one paragraph (Kindle shows
		#----                    only first paragraph in floating window)
		# mode = "default"
		#---- Names of the <body> tags in fb2 document to consider for notes processing
		# body_names = [ "notes", "comments" ]
		#---- Make sure that links in the content are named and numbered consistently
		#---- NOTE: only works for pop up notes formatting (only for floating notes)
		# renumber = false
		#---- For v1: pattern to format notes links when renumbering them
		#---- "#body_number"  - number of the body where note is located. If there is only one body with notes it will be empty
		#---- "#number"       - number of note in the body
		#---- "#body_name"    - either title of the body where note is located or body's name if there is no title
		#---- "#body_name_Fl" - first letter of the #body_name exactly as it was encountered
		#---- "#body_name_fl" - first letter of the #body_name lowercased
		#---- "#body_name_FL" - first letter of the #body_name uppercased
		# link_format = "[{#body_number.}#number]"
		#---- For v2: template to format notes links when renumbering them
		#-------- Contexts: link-notes
		#-------- .Body { .Name (string), .Number (int), .NoteNumber (int)} is set in addion to other variables.
		#---- to get exactly the same result as v1 defaults use this:
		# link_format = """\
		# 	[{{- if gt .Body.Number 0 -}}
		# 	 {{-   printf "%d" .Body.Number -}}.\
		# 	 {{- end -}}\
		# 	 {{- printf "%d" .Body.NoteNumber -}}]\
		# 	"""

	[document.toc]
		#---- Type of ncx TOC generated, depends on device support
		#---- "normal" - TOC could have as many levels as possible
		#---- "kindle" - TOC will have two levels for Kindle eInk support
		#---- "flat"   - TOC will have single level
		# type = "normal"
		#---- Generate additional page with TOC (some devices may not support proper ncx TOC at all)
		#---- "none"   - do not generate it at all
		#---- "before" - place it at the beginning of the book
		#---- "after"  - place it at the end of the book
		# page_placement = "after"
		#---- Name of the TOC page in a book
		# page_title = "Content"
		#---- How many levels TOC page will have before flattening
		# page_maxlevel = 2147483647
		#---- Include chapter without title to TOC - this prevents empty TOC on "bad" books adding chapters without titles to the TOC
		# include_chapters_without_title = false
		#---- When creating TOC page take book title and author(s) from meta info and not from first title of main body
		# book_title_from_meta = false

	[document.cover]
		#---- Process cover images for any output format the same way we do it for Kindle formats: converting to jpeg and resizing
		#---- it is set to true atomatically when "stk" is requested
		# always_convert = false
		#---- If book does not have cover image - use default one. For Amazon formats always true
		# default = false
		#---- Will be used as default cover image. If not specified - one will be provided by the program
		# image_path = "default_cover.jpeg"
		#---- Specify device screen size so cover image could be adjusted properly. It defaults to Oasis 2 (width = 1264, height = 1680)
		# width = 1264
		# height = 1680
		#---- Specifies how to additionally process cover image.
		#---- "none" - do nothing for non-Kindle formats, for Kindle if image height is less than specified above, resize to specified height keeping aspect ratio
		#---- "keepAR" - unconditionally resize to specified height keeping aspect ratio
		#---- "stretch" - unconditionally resize to specified width and height
		# resize = "none"
		#---- Places stamp with title, author and book sequence on cover image (if default cover used - it always will be stamped)
		#---- "none" - no stamping
		#---- "top" - stamp at the top of cover
		#---- "middle" - stamp in the middle of cover
		#---- "bottom" - stamp at the bottom of cover
		# stamp_placement = "none"
		#---- Font to use for stamping, if not specified program will use default
		# stamp_font = "LinLibertine_RBah.ttf"

	[document.transform]
		#---- Additional text transformations - could be used to fix some common issues with FB2 files
		#---- Happens during paragraph processing, before any language sensitive tokenization
		#---- Order of transformation is hardcoded: speech, dashes, dialogue
		#---- Comment out any section to disable transformation

		#---- At the beginning of paragraph text starting with Unicode symbol included in "from" string possibly
		#---- followed by any number of Unicode space symbols is replaced with "to" string
		# [document.transform.speech]
			# from = "‐‑−–—―"
			# to = "— "

		#---- In paragraphs any Unicode symbol included in "from" string, surrounded by Unicode spaces is replaced with
		#---- first Unicode symbol from "to" string.
		# [document.transform.dashes]
			# from = "‐‑−–—―"
			# to = "—"

		#---- In paragraphs sequence of leading Unicode spaces followed by any Unicode symbol included in "from" string is
		#---- replaced with "to" string followed by this Unicode symbol.
		# [document.transform.dialogue]
			# from = "‐‑−–—―"
			# to = " "

	#---- Vignette images could be specified for up to 6 levels of headers (h0 - h6) and "default"
	#---- "none" has a special meaning suppressing particular vignette usage
	[document.vignettes]
		#---- Use vignette images
		# create = true

		#---- "default" level images (for all non specified levels) and images for specific header levels ("h0" - "h6") are supported
		#---- For any header to overwrite any image from "default" level use "none" keyword
		[document.vignettes.images.default]
			# before_title = "profiles/vignettes/title_before.png"
			# after_title = "profiles/vignettes/title_after.png"
			# chapter_end = "profiles/vignettes/chapter_end.png"

		[document.vignettes.images.h0]
			# before_title = "none"
			# after_title = "none"
			# chapter_end = "none"

	#---- Data from this section only used when output is requested in Amazon's format: mobi or azw3
	[document.kindlegen]
		#---- Specifies exact location of platform specific Amazon kindlegen utility
		#---- (to download visit "https://www.amazon.com/gp/feature.html?ie=UTF8&docId=1000765211")
		#---- If path is not absolute - it is assumed to be relative to program directory
		#---- If not specified at all program will look for proper kindlegen the directory it is started from
		# path = "linux/kindlegen"
		#---- Kindlegen compression level
		# compression_level = 1
		#---- Kindlegen will produce verbose output (when debugging - always verbose)
		# verbose = false
		#---- When producing mobi - do not touch it after kindlegen
		# no_mobi_optimization = false
		#---- If set to true "Personal label" will be removed from the resulting book producing "EBOK" document.
		#---- Otherwise - "PDOC", default for kndlegen
		# remove_personal_label = true
		#---- When producing azw3 - make sure that ASIN is set.
		#---- Looks like this is important for "vocabulary builder" at least on eInk devices
		# force_asin_on_azw3 = false
		#----  depending on device Kindle expects APNX page map file in different places
		#----  "none" - nothing will be generated
		#----  "eink" - apnx will be located in .sbr directory
		#----  "app"  - apnx will be located alongside with converted file
		# generate_apnx = "none"

[sendtokindle]
	#---- In case book sent successfully - delete it from disk
	# delete_sent_book = false

	#---- SMTP server parameters
	# smtp_server = "smtp.gmail.com"
	# smtp_port = 587
	# smtp_user = "your mail user"
	# smtp_password = "your mail password"

	#---- Required by Amazon service
	# from_mail = "address authorized by your Amazon account"
	# to_mail = "mail address of your Kindle device"

#-----------------------------------------------------------------------------------------------------------------------------
#---- Sometimes external processors will need to overwrite some or all of book meta-data and or cover image. You could specify
#---- array of overwrites.
#----
#---- "name" specifies to which book overwrite is applicable, "*" means to all converted books, name could specify part of the
#---- file path (relative to source path), for example "aaa/bbb.fb2" will cause meta data for all "bbb.fb2" files found under
#---- "aaa" path converted during program run to be overwritten. Overwrites are always searched from most specific to less
#---- specific: "aaa/bbb.fb2", then "bbb.fb2", then "*". When first suitable overwrite is found - it will be used, no further
#---- search is performed.
#-----
#---- "meta" section could have any or all of following tags: "id", "language", "title", "genres", "authors", "sequence",
#---- "sequence_number", "date" and "cover_image", where genres and authors are arrays of strings and cover_image is a path
#---- to valid image. Additional "asin" tag (10 alphanumeric characters) could be used for kindle formats providing GoodReads
#---- integration on devices. If any of the tags are wrong (file does not exists or bad, sequence number is negative, etc.) -
#---- they will be dropped silently and no overwrite will be performed.
#-----------------------------------------------------------------------------------------------------------------------------
#[[overwrites]]
#	name = "*"
#	[overwrites.meta]
#		id = "250ddd1e-86e8-41c0-a881-0e0c96c4da7c"
#		asin = "B06XWTFSKH"
#		language = "hu"
#		title = "Global title"
#		genres = ["sci_fy", "history"]
#		authors = [
#			{ first_name = "First", last_name = "Author" },
#			{ first_name = "Second", last_name = "Author" }
#		]
#		sequence = "Super Series"
#		sequence_number = 666
#		date = "1984"
#		cover_image = "full_file_name" or "remove cover" if you want to completly remove cover image

#-----------------------------------------------------------------------------------------------------------------------------
#---- Windows only, support for MyHomeLib
#-----------------------------------------------------------------------------------------------------------------------------
#---- fb2mobi.exe or fb2epub.exe wrappers will search for fb2c.exe either in the directory they started from: "./fb2c.exe"
#---- or in "fb2converter" directory one level up in path hierarchy: "../fb2converter/fb2c.exe". They will check for
#---- existence of fb2mobi.toml or fb2epub.toml in the directory they are started from and if found will supply those files
#---- as configuration to fb2c.exe

[fb2mobi]

	#---- NOTE: due to specifics of current MyHomeLib implementation there is no way to specify azw3 output format
	#---- via command line to fb2mobi.exe. So in one and only case when fb2c is started indirectly using fb2mobi helper
	#---- "convert" command line option "--to" will be ignored and value of "output_format" will be used instead
	#---- If it is not specified here - "mobi" is assumed.
	# output_format = "mobi"

[fb2epub]

	#---- NOTE: due to specifics of current MyHomeLib implementation there is no way to specify kepub output format
	#---- via command line to fb2epub.exe. So in one and only case when fb2c is started indirectly using fb2epub helper
	#---- "convert" command line option "--to" will be ignored and value of "output_format" will be used instead
	#---- If it is not specified here - "epub" is assumed.
	# output_format = "epub"
	
	#---- NOTE: due to specifics of current MyHomeLib implementation there is no way to activate SendToKindle
	#---- via command line to fb2epub.exe. So in one and only case when fb2c is started indirectly using fb2epub helper
	#---- "convert" command line option "--stk" will be ignored and value of "send_to_kindle" will be used instead
	#---- If it is not specified here - "false" is assumed.
	# send_to_kindle = false	
